MIME-Version: 1.0
Received: by 10.140.19.178 with HTTP; Fri, 17 Feb 2017 04:16:43 -0800 (PST)
In-Reply-To: <CAJF3sop582HwL9R-Jv=fAyhHDvtAB0d6k8ZD3OfMUPZz3Gaxgw@mail.gmail.com>
References: <CAJF3sopEgaUMADwPMKmYnaymqZ-xNJiVk=jHjbgCnxR6LQseCA@mail.gmail.com>
	<CAJF3sop582HwL9R-Jv=fAyhHDvtAB0d6k8ZD3OfMUPZz3Gaxgw@mail.gmail.com>
Date: Fri, 17 Feb 2017 17:46:43 +0530
Delivered-To: digvijay@unicommerce.com
Message-ID: <CAJF3sopG8oY2cDsDRtmvYfM+UnhLMK_Od0Tqey4qY7jRCzpC=g@mail.gmail.com>
Subject: Re:
From: Digvijay Sharma <digvijay@unicommerce.com>
To: Sagar Sahni <sagar@unicommerce.com>
Content-Type: multipart/alternative; boundary=001a11c11d06fed2530548b8e287

--001a11c11d06fed2530548b8e287
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

/*
 *  Copyright 2012 Unicommerce Technologies (P) Limited . All Rights Reserv=
ed.
 *  UNICOMMERCE TECHONOLOGIES PROPRIETARY/CONFIDENTIAL. Use is subject
to license terms.
 *
 *  @version     1.0, Jan 18, 2012
 *  @author singla
 */
package com.unifier.core.transport.http;

import java.io.IOException;
import java.net.InetAddress;
import java.security.cert.X509Certificate;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.TimeUnit;
import javax.net.ssl.SNIHostName;
import javax.net.ssl.SNIServerName;
import javax.net.ssl.SSLHandshakeException;
import javax.net.ssl.SSLParameters;
import javax.net.ssl.SSLSocket;
import org.apache.http.HttpEntityEnclosingRequest;
import org.apache.http.HttpRequest;
import org.apache.http.HttpVersion;
import org.apache.http.NoHttpResponseException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.HttpRequestRetryHandler;
import org.apache.http.client.params.ClientPNames;
import org.apache.http.conn.params.ConnRouteParams;
import org.apache.http.conn.scheme.PlainSocketFactory;
import org.apache.http.conn.scheme.Scheme;
import org.apache.http.conn.scheme.SchemeRegistry;
import org.apache.http.conn.ssl.SSLSocketFactory;
import org.apache.http.conn.ssl.TrustStrategy;
import org.apache.http.impl.client.DecompressingHttpClient;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.impl.client.LaxRedirectStrategy;
import org.apache.http.impl.conn.PoolingClientConnectionManager;
import org.apache.http.params.BasicHttpParams;
import org.apache.http.params.HttpConnectionParams;
import org.apache.http.params.HttpParams;
import org.apache.http.params.HttpProtocolParams;
import org.apache.http.protocol.ExecutionContext;
import org.apache.http.protocol.HttpContext;

/**
 * @author singla
 */
public class HttpClientFactory {
    private static final int
DEFAULT_REQUEST_TIMEOUT =3D 60 * 1000;
    private static final Map<String, HttpClient> httpClientCache
  =3D new ConcurrentHashMap<>();
    private static IHttpClientNameDecorator      httpClientNameDecorator;

    public static void
setHttpClientNameDecorator(IHttpClientNameDecorator
httpClientNameDecorator) {
        HttpClientFactory.httpClientNameDecorator =3D httpClientNameDecorat=
or;
    }

    /**
     * @param name
     * @return the cached http client instance for the given name
     */
    public static HttpClient getCachedHttpClient(String name, boolean
trustAll) {
        if (HttpClientFactory.httpClientNameDecorator !=3D null) {
            name =3D HttpClientFactory.httpClientNameDecorator.decorate(nam=
e);
        }

        HttpClient httpClient =3D httpClientCache.get(name);
        if (httpClient =3D=3D null) {
            synchronized (httpClientCache) {
                httpClient =3D httpClientCache.get(name);
                if (httpClient =3D=3D null) {
                    httpClient =3D buildHttpClient(trustAll);
                    httpClientCache.put(name, httpClient);
                }
            }
        }
        return httpClient;
    }

    private static HttpClient buildHttpClient(InetAddress
localAddress, boolean trustAll) {
        HttpParams params =3D new BasicHttpParams();
        HttpConnectionParams.setSoTimeout(params, DEFAULT_REQUEST_TIMEOUT);
        ConnRouteParams.setLocalAddress(params, localAddress);
        HttpProtocolParams.setVersion(params, HttpVersion.HTTP_1_1);
        params.getParameter(ClientPNames.COOKIE_POLICY);
        params.setBooleanParameter(ClientPNames.ALLOW_CIRCULAR_REDIRECTS,tr=
ue);
        params.setIntParameter(ClientPNames.MAX_REDIRECTS,100);
        SchemeRegistry schemeRegistry =3D new SchemeRegistry();
        schemeRegistry.register(new Scheme("http", 80,
PlainSocketFactory.getSocketFactory()));
        SSLSocketFactory socketFactory;
        if (trustAll) {
            try {
                socketFactory =3D new SSLSocketFactory(new TrustStrategy() =
{
                    @Override
                    public boolean isTrusted(final X509Certificate[]
chain, String authType) {
                        // Oh, I am easy...
                        return true;
                    }

                }, SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER);
            } catch (Exception e) {
                socketFactory =3D SSLSocketFactory.getSocketFactory();
            }
        } else {
            socketFactory =3D SSLSocketFactory.getSocketFactory();
        }
        schemeRegistry.register(new Scheme("https", 443, socketFactory));

        SSLSocket sslSocket =3D null;
        try {
            sslSocket =3D (SSLSocket) socketFactory.createSocket();
        } catch (IOException e) {
            e.printStackTrace();
        }
        // SSLEngine sslEngine =3D sslContext.createSSLEngine("172.16.10.6"=
, 443);

        SNIHostName serverName =3D new SNIHostName("www.singlekart.com");
        List<SNIServerName> serverNames =3D new ArrayList<>(1);
        serverNames.add(serverName);
        SSLParameters sslParams =3D sslSocket.getSSLParameters();
        sslParams.setServerNames(serverNames);
        sslSocket.setSSLParameters(sslParams);
        // sslEngine.setSSLParameters(params);


        PoolingClientConnectionManager cm =3D new
PoolingClientConnectionManager(schemeRegistry, 5 , TimeUnit.MINUTES);
        cm.setDefaultMaxPerRoute(20);
        cm.setMaxTotal(100);
        DefaultHttpClient client =3D new DefaultHttpClient(cm, params);
        HttpRequestRetryHandler retryHandler =3D new HttpRequestRetryHandle=
r() {
            @Override
            public boolean retryRequest(IOException exception, int
executionCount, HttpContext context) {
                if (executionCount >=3D 2) {
                    // Do not retry if over max retry count
                    return false;
                }
                if (exception instanceof NoHttpResponseException) {
                    // Retry if the server dropped connection on us
                    return true;
                }
                if (exception instanceof SSLHandshakeException) {
                    // Do not retry on SSL handshake exception
                    return false;
                }
                HttpRequest request =3D (HttpRequest)
context.getAttribute(ExecutionContext.HTTP_REQUEST);
                boolean idempotent =3D !(request instanceof
HttpEntityEnclosingRequest);
                if (idempotent) {
                    // Retry if the request is considered idempotent
                    return true;
                }
                return false;
            }
        };
        client.setHttpRequestRetryHandler(retryHandler);
        client.setRedirectStrategy(new LaxRedirectStrategy());
        return new DecompressingHttpClient(client);
    }

    public static HttpClient buildHttpClient(boolean trustAll) {
        return buildHttpClient(null, true);
    }

    public static HttpClient buildHttpClient() {
        return buildHttpClient(null, false);
    }

    public static void clearCache() {
        httpClientCache.clear();
    }

    public static void clearCacheEntry(String name) {
        if (HttpClientFactory.httpClientNameDecorator !=3D null) {
            name =3D HttpClientFactory.httpClientNameDecorator.decorate(nam=
e);
        }
        httpClientCache.remove(name);
    }

}


On Fri, Feb 17, 2017 at 5:41 PM, Digvijay Sharma <digvijay@unicommerce.com>
wrote:

>
>     public static void main(String[] args) throws HttpTransportException,=
 IOException, InterruptedException {
> //        System.out.println(new BigDecimal("0.00"));
>
> //        Process p =3D Runtime.getRuntime().exec("/bin/bash -c wget --qu=
iet   --output-document   - 'https://www.singlekart.com/wp-json/wc/v1/produ=
cts?consumer_key=3Dck_ac07ede27ebf2884d9a06dada0fb1eb3a6f19810&consumer_sec=
ret=3Dcc9ec0eeb500af6b34bcec948ac6ee88396daf4cc&per_page=3D1&page=3D1'");
> //        p.waitFor();
> ////        System.out.println(p.getOutputStream());
> //        String s =3D null;
> //        try {
> //            BufferedReader br =3D new BufferedReader(
> //                    new InputStreamReader(p.getInputStream()));
> //            while ((s =3D br.readLine()) !=3D null) {
> //                System.out.println(s);
> //            }
> //        } catch (IOException ioe) {
> //            ioe.printStackTrace();
> //        }
> //        System.out.println(new HttpSender(true).executeGet("https://www=
.singlekart.com/wp-json/wc/v1/products?consumer_key=3Dck_ac07ede27ebf2884d9=
a06dada0fb1eb3a6f19810&consumer_secret=3Dcs_c9ec0eeb500af6b34bcec948ac6ee88=
396daf4cc&per_page=3D1&page=3D1",null));
>         System.out.println(new HttpSender(true).executeGet("http://www.si=
nglekart.com",null));
>
>
> //        System.out.println(dateToString(addToDate(getCurrentDate(), Cal=
endar.DATE, -30),"yyyy-MM-ddTmm:HH:ssZ"));
>     }
>
>
> On Fri, Feb 17, 2017 at 5:39 PM, Digvijay Sharma <digvijay@unicommerce.co=
m
> > wrote:
>
>> sudo keytool -import -alias alias -keystore
>> /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib=
/security/cacerts
>> -file ~/Downloads/u1.cer
>>
>>
>>
>>
>

--001a11c11d06fed2530548b8e287
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><pre style=3D"color:rgb(0,0,0);font-family:menlo;font-size=
:9pt"><span style=3D"color:rgb(128,128,128);font-style:italic">/*<br></span=
><span style=3D"color:rgb(128,128,128);font-style:italic"> *  Copyright 201=
2 Unicommerce Technologies (P) Limited . All Rights Reserved.<br></span><sp=
an style=3D"color:rgb(128,128,128);font-style:italic"> *  UNICOMMERCE TECHO=
NOLOGIES PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.<br></sp=
an><span style=3D"color:rgb(128,128,128);font-style:italic"> *  <br></span>=
<span style=3D"color:rgb(128,128,128);font-style:italic"> *  @version     1=
.0, Jan 18, 2012<br></span><span style=3D"color:rgb(128,128,128);font-style=
:italic"> *  @author singla<br></span><span style=3D"color:rgb(128,128,128)=
;font-style:italic"> */<br></span><span style=3D"color:rgb(0,0,128);font-we=
ight:bold">package </span>com.unifier.core.transport.http;<br><br><span sty=
le=3D"color:rgb(0,0,128);font-weight:bold">import </span>java.io.IOExceptio=
n;<br><span style=3D"color:rgb(0,0,128);font-weight:bold">import </span>jav=
a.net.InetAddress;<br><span style=3D"color:rgb(0,0,128);font-weight:bold">i=
mport </span>java.security.cert.X509Certificate;<br><span style=3D"color:rg=
b(0,0,128);font-weight:bold">import </span>java.util.ArrayList;<br><span st=
yle=3D"color:rgb(0,0,128);font-weight:bold">import </span>java.util.List;<b=
r><span style=3D"color:rgb(0,0,128);font-weight:bold">import </span>java.ut=
il.Map;<br><span style=3D"color:rgb(0,0,128);font-weight:bold">import </spa=
n>java.util.concurrent.ConcurrentHashMap;<br><span style=3D"color:rgb(0,0,1=
28);font-weight:bold">import </span>java.util.concurrent.TimeUnit;<br><span=
 style=3D"color:rgb(0,0,128);font-weight:bold">import </span>javax.net.ssl.=
SNIHostName;<br><span style=3D"color:rgb(0,0,128);font-weight:bold">import =
</span>javax.net.ssl.SNIServerName;<br><span style=3D"color:rgb(0,0,128);fo=
nt-weight:bold">import </span>javax.net.ssl.SSLHandshakeException;<br><span=
 style=3D"color:rgb(0,0,128);font-weight:bold">import </span>javax.net.ssl.=
SSLParameters;<br><span style=3D"color:rgb(0,0,128);font-weight:bold">impor=
t </span>javax.net.ssl.SSLSocket;<br><span style=3D"color:rgb(0,0,128);font=
-weight:bold">import </span>org.apache.http.HttpEntityEnclosingRequest;<br>=
<span style=3D"color:rgb(0,0,128);font-weight:bold">import </span>org.apach=
e.http.HttpRequest;<br><span style=3D"color:rgb(0,0,128);font-weight:bold">=
import </span>org.apache.http.HttpVersion;<br><span style=3D"color:rgb(0,0,=
128);font-weight:bold">import </span>org.apache.http.NoHttpResponseExceptio=
n;<br><span style=3D"color:rgb(0,0,128);font-weight:bold">import </span>org=
.apache.http.client.HttpClient;<br><span style=3D"color:rgb(0,0,128);font-w=
eight:bold">import </span>org.apache.http.client.HttpRequestRetryHandler;<b=
r><span style=3D"color:rgb(0,0,128);font-weight:bold">import </span>org.apa=
che.http.client.params.ClientPNames;<br><span style=3D"color:rgb(0,0,128);f=
ont-weight:bold">import </span>org.apache.http.conn.params.ConnRouteParams;=
<br><span style=3D"color:rgb(0,0,128);font-weight:bold">import </span>org.a=
pache.http.conn.scheme.PlainSocketFactory;<br><span style=3D"color:rgb(0,0,=
128);font-weight:bold">import </span>org.apache.http.conn.scheme.Scheme;<br=
><span style=3D"color:rgb(0,0,128);font-weight:bold">import </span>org.apac=
he.http.conn.scheme.SchemeRegistry;<br><span style=3D"color:rgb(0,0,128);fo=
nt-weight:bold">import </span>org.apache.http.conn.ssl.SSLSocketFactory;<br=
><span style=3D"color:rgb(0,0,128);font-weight:bold">import </span>org.apac=
he.http.conn.ssl.TrustStrategy;<br><span style=3D"color:rgb(0,0,128);font-w=
eight:bold">import </span>org.apache.http.impl.client.DecompressingHttpClie=
nt;<br><span style=3D"color:rgb(0,0,128);font-weight:bold">import </span>or=
g.apache.http.impl.client.DefaultHttpClient;<br><span style=3D"color:rgb(0,=
0,128);font-weight:bold">import </span>org.apache.http.impl.client.LaxRedir=
ectStrategy;<br><span style=3D"color:rgb(0,0,128);font-weight:bold">import =
</span>org.apache.http.impl.conn.PoolingClientConnectionManager;<br><span s=
tyle=3D"color:rgb(0,0,128);font-weight:bold">import </span>org.apache.http.=
params.BasicHttpParams;<br><span style=3D"color:rgb(0,0,128);font-weight:bo=
ld">import </span>org.apache.http.params.HttpConnectionParams;<br><span sty=
le=3D"color:rgb(0,0,128);font-weight:bold">import </span>org.apache.http.pa=
rams.HttpParams;<br><span style=3D"color:rgb(0,0,128);font-weight:bold">imp=
ort </span>org.apache.http.params.HttpProtocolParams;<br><span style=3D"col=
or:rgb(0,0,128);font-weight:bold">import </span>org.apache.http.protocol.Ex=
ecutionContext;<br><span style=3D"color:rgb(0,0,128);font-weight:bold">impo=
rt </span>org.apache.http.protocol.HttpContext;<br><br><span style=3D"color=
:rgb(128,128,128);font-style:italic">/**<br></span><span style=3D"color:rgb=
(128,128,128);font-style:italic"> * </span><span style=3D"color:rgb(128,128=
,128);font-weight:bold;font-style:italic">@author </span><span style=3D"col=
or:rgb(128,128,128);font-style:italic">singla<br></span><span style=3D"colo=
r:rgb(128,128,128);font-style:italic"> */<br></span><span style=3D"color:rg=
b(0,0,128);font-weight:bold">public class </span>HttpClientFactory {<br>   =
 <span style=3D"color:rgb(0,0,128);font-weight:bold">private static final i=
nt                     </span><span style=3D"color:rgb(102,14,122);font-wei=
ght:bold;font-style:italic">DEFAULT_REQUEST_TIMEOUT </span>=3D <span style=
=3D"color:rgb(0,0,255)">60 </span>* <span style=3D"color:rgb(0,0,255)">1000=
</span>;<br>    <span style=3D"color:rgb(0,0,128);font-weight:bold">private=
 static final </span>Map&lt;String, HttpClient&gt; <span style=3D"color:rgb=
(102,14,122);font-weight:bold;font-style:italic">httpClientCache         </=
span>=3D <span style=3D"color:rgb(0,0,128);font-weight:bold">new </span>Con=
currentHashMap&lt;&gt;();<br>    <span style=3D"color:rgb(0,0,128);font-wei=
ght:bold">private static </span>IHttpClientNameDecorator      <span style=
=3D"color:rgb(102,14,122);font-style:italic">httpClientNameDecorator</span>=
;<br><br>    <span style=3D"color:rgb(0,0,128);font-weight:bold">public sta=
tic void </span>setHttpClientNameDecorator(IHttpClientNameDecorator httpCli=
entNameDecorator) {<br>        HttpClientFactory.<span style=3D"color:rgb(1=
02,14,122);font-style:italic">httpClientNameDecorator </span>=3D httpClient=
NameDecorator;<br>    }<br><br>    <span style=3D"color:rgb(128,128,128);fo=
nt-style:italic">/**<br></span><span style=3D"color:rgb(128,128,128);font-s=
tyle:italic">     * </span><span style=3D"color:rgb(128,128,128);font-weigh=
t:bold;font-style:italic">@param </span><span style=3D"color:rgb(61,61,61);=
font-weight:bold;font-style:italic">name<br></span><span style=3D"color:rgb=
(61,61,61);font-weight:bold;font-style:italic">     </span><span style=3D"c=
olor:rgb(128,128,128);font-style:italic">* </span><span style=3D"color:rgb(=
128,128,128);font-weight:bold;font-style:italic">@return </span><span style=
=3D"color:rgb(128,128,128);font-style:italic">the cached http client instan=
ce for the given name<br></span><span style=3D"color:rgb(128,128,128);font-=
style:italic">     */<br></span><span style=3D"color:rgb(128,128,128);font-=
style:italic">    </span><span style=3D"color:rgb(0,0,128);font-weight:bold=
">public static </span>HttpClient getCachedHttpClient(String name, <span st=
yle=3D"color:rgb(0,0,128);font-weight:bold">boolean </span>trustAll) {<br> =
       <span style=3D"color:rgb(0,0,128);font-weight:bold">if </span>(HttpC=
lientFactory.<span style=3D"color:rgb(102,14,122);font-style:italic">httpCl=
ientNameDecorator </span>!=3D <span style=3D"color:rgb(0,0,128);font-weight=
:bold">null</span>) {<br>            name =3D HttpClientFactory.<span style=
=3D"color:rgb(102,14,122);font-style:italic">httpClientNameDecorator</span>=
.decorate(name);<br>        }<br><br>        HttpClient httpClient =3D <spa=
n style=3D"color:rgb(102,14,122);font-weight:bold;font-style:italic">httpCl=
ientCache</span>.get(name);<br>        <span style=3D"color:rgb(0,0,128);fo=
nt-weight:bold">if </span>(httpClient =3D=3D <span style=3D"color:rgb(0,0,1=
28);font-weight:bold">null</span>) {<br>            <span style=3D"color:rg=
b(0,0,128);font-weight:bold">synchronized </span>(<span style=3D"color:rgb(=
102,14,122);font-weight:bold;font-style:italic">httpClientCache</span>) {<b=
r>                httpClient =3D <span style=3D"color:rgb(102,14,122);font-=
weight:bold;font-style:italic">httpClientCache</span>.get(name);<br>       =
         <span style=3D"color:rgb(0,0,128);font-weight:bold">if </span>(htt=
pClient =3D=3D <span style=3D"color:rgb(0,0,128);font-weight:bold">null</sp=
an>) {<br>                    httpClient =3D <span style=3D"font-style:ital=
ic">buildHttpClient</span>(trustAll);<br>                    <span style=3D=
"color:rgb(102,14,122);font-weight:bold;font-style:italic">httpClientCache<=
/span>.put(name, httpClient);<br>                }<br>            }<br>    =
    }<br>        <span style=3D"color:rgb(0,0,128);font-weight:bold">return=
 </span>httpClient;<br>    }<br><br>    <span style=3D"color:rgb(0,0,128);f=
ont-weight:bold">private static </span>HttpClient buildHttpClient(InetAddre=
ss localAddress, <span style=3D"color:rgb(0,0,128);font-weight:bold">boolea=
n </span>trustAll) {<br>        HttpParams params =3D <span style=3D"color:=
rgb(0,0,128);font-weight:bold">new </span>BasicHttpParams();<br>        Htt=
pConnectionParams.<span style=3D"font-style:italic">setSoTimeout</span>(par=
ams, <span style=3D"color:rgb(102,14,122);font-weight:bold;font-style:itali=
c">DEFAULT_REQUEST_TIMEOUT</span>);<br>        ConnRouteParams.<span style=
=3D"font-style:italic">setLocalAddress</span>(params, localAddress);<br>   =
     HttpProtocolParams.<span style=3D"font-style:italic">setVersion</span>=
(params, HttpVersion.<span style=3D"color:rgb(102,14,122);font-weight:bold;=
font-style:italic">HTTP_1_1</span>);<br>        params.getParameter(ClientP=
Names.<span style=3D"color:rgb(102,14,122);font-weight:bold;font-style:ital=
ic">COOKIE_POLICY</span>);<br>        params.setBooleanParameter(ClientPNam=
es.<span style=3D"color:rgb(102,14,122);font-weight:bold;font-style:italic"=
>ALLOW_CIRCULAR_REDIRECTS</span>,<span style=3D"color:rgb(0,0,128);font-wei=
ght:bold">true</span>);<br>        params.setIntParameter(ClientPNames.<spa=
n style=3D"color:rgb(102,14,122);font-weight:bold;font-style:italic">MAX_RE=
DIRECTS</span>,<span style=3D"color:rgb(0,0,255)">100</span>);<br>        S=
chemeRegistry schemeRegistry =3D <span style=3D"color:rgb(0,0,128);font-wei=
ght:bold">new </span>SchemeRegistry();<br>        schemeRegistry.register(<=
span style=3D"color:rgb(0,0,128);font-weight:bold">new </span>Scheme(<span =
style=3D"color:rgb(0,128,0);font-weight:bold">&quot;http&quot;</span>, <spa=
n style=3D"color:rgb(0,0,255)">80</span>, PlainSocketFactory.<span style=3D=
"font-style:italic">getSocketFactory</span>()));<br>        SSLSocketFactor=
y socketFactory;<br>        <span style=3D"color:rgb(0,0,128);font-weight:b=
old">if </span>(trustAll) {<br>            <span style=3D"color:rgb(0,0,128=
);font-weight:bold">try </span>{<br>                socketFactory =3D <span=
 style=3D"color:rgb(0,0,128);font-weight:bold">new </span>SSLSocketFactory(=
<span style=3D"color:rgb(0,0,128);font-weight:bold">new </span>TrustStrateg=
y() {<br>                    <span style=3D"color:rgb(128,128,0)">@Override=
<br></span><span style=3D"color:rgb(128,128,0)">                    </span>=
<span style=3D"color:rgb(0,0,128);font-weight:bold">public boolean </span>i=
sTrusted(<span style=3D"color:rgb(0,0,128);font-weight:bold">final </span>X=
509Certificate[] chain, String authType) {<br>                        <span=
 style=3D"color:rgb(128,128,128);font-style:italic">// Oh, I am easy...<br>=
</span><span style=3D"color:rgb(128,128,128);font-style:italic">           =
             </span><span style=3D"color:rgb(0,0,128);font-weight:bold">ret=
urn true</span>;<br>                    }<br><br>                }, SSLSock=
etFactory.<span style=3D"color:rgb(102,14,122);font-weight:bold;font-style:=
italic">ALLOW_ALL_HOSTNAME_VERIFIER</span>);<br>            } <span style=
=3D"color:rgb(0,0,128);font-weight:bold">catch </span>(Exception e) {<br>  =
              socketFactory =3D SSLSocketFactory.<span style=3D"font-style:=
italic">getSocketFactory</span>();<br>            }<br>        } <span styl=
e=3D"color:rgb(0,0,128);font-weight:bold">else </span>{<br>            sock=
etFactory =3D SSLSocketFactory.<span style=3D"font-style:italic">getSocketF=
actory</span>();<br>        }<br>        schemeRegistry.register(<span styl=
e=3D"color:rgb(0,0,128);font-weight:bold">new </span>Scheme(<span style=3D"=
color:rgb(0,128,0);font-weight:bold">&quot;https&quot;</span>, <span style=
=3D"color:rgb(0,0,255)">443</span>, socketFactory));<br><br>        SSLSock=
et sslSocket =3D <span style=3D"color:rgb(0,0,128);font-weight:bold">null</=
span>;<br>        <span style=3D"color:rgb(0,0,128);font-weight:bold">try <=
/span>{<br>            sslSocket =3D (SSLSocket) socketFactory.createSocket=
();<br>        } <span style=3D"color:rgb(0,0,128);font-weight:bold">catch =
</span>(IOException e) {<br>            e.printStackTrace();<br>        }<b=
r>        <span style=3D"color:rgb(128,128,128);font-style:italic">// SSLEn=
gine sslEngine =3D sslContext.createSSLEngine(&quot;172.16.10.6&quot;, 443)=
;<br></span><span style=3D"color:rgb(128,128,128);font-style:italic"><br></=
span><span style=3D"color:rgb(128,128,128);font-style:italic">        </spa=
n>SNIHostName serverName =3D <span style=3D"color:rgb(0,0,128);font-weight:=
bold">new </span>SNIHostName(<span style=3D"color:rgb(0,128,0);font-weight:=
bold">&quot;<a href=3D"http://www.singlekart.com">www.singlekart.com</a>&qu=
ot;</span>);<br>        List&lt;SNIServerName&gt; serverNames =3D <span sty=
le=3D"color:rgb(0,0,128);font-weight:bold">new </span>ArrayList&lt;&gt;(<sp=
an style=3D"color:rgb(0,0,255)">1</span>);<br>        serverNames.add(serve=
rName);<br>        SSLParameters sslParams =3D sslSocket.getSSLParameters()=
;<br>        sslParams.setServerNames(serverNames);<br>        sslSocket.se=
tSSLParameters(sslParams);<br>        <span style=3D"color:rgb(128,128,128)=
;font-style:italic">// sslEngine.setSSLParameters(params);<br></span><span =
style=3D"color:rgb(128,128,128);font-style:italic"><br></span><span style=
=3D"color:rgb(128,128,128);font-style:italic"><br></span><span style=3D"col=
or:rgb(128,128,128);font-style:italic">        </span>PoolingClientConnecti=
onManager cm =3D <span style=3D"color:rgb(0,0,128);font-weight:bold">new </=
span>PoolingClientConnectionManager(schemeRegistry, <span style=3D"color:rg=
b(0,0,255)">5 </span>, TimeUnit.<span style=3D"color:rgb(102,14,122);font-w=
eight:bold;font-style:italic">MINUTES</span>);<br>        cm.setDefaultMaxP=
erRoute(<span style=3D"color:rgb(0,0,255)">20</span>);<br>        cm.setMax=
Total(<span style=3D"color:rgb(0,0,255)">100</span>);<br>        DefaultHtt=
pClient client =3D <span style=3D"color:rgb(0,0,128);font-weight:bold">new =
</span>DefaultHttpClient(cm, params);<br>        HttpRequestRetryHandler re=
tryHandler =3D <span style=3D"color:rgb(0,0,128);font-weight:bold">new </sp=
an>HttpRequestRetryHandler() {<br>            <span style=3D"color:rgb(128,=
128,0)">@Override<br></span><span style=3D"color:rgb(128,128,0)">          =
  </span><span style=3D"color:rgb(0,0,128);font-weight:bold">public boolean=
 </span>retryRequest(IOException exception, <span style=3D"color:rgb(0,0,12=
8);font-weight:bold">int </span>executionCount, HttpContext context) {<br> =
               <span style=3D"color:rgb(0,0,128);font-weight:bold">if </spa=
n>(executionCount &gt;=3D <span style=3D"color:rgb(0,0,255)">2</span>) {<br=
>                    <span style=3D"color:rgb(128,128,128);font-style:itali=
c">// Do not retry if over max retry count<br></span><span style=3D"color:r=
gb(128,128,128);font-style:italic">                    </span><span style=
=3D"color:rgb(0,0,128);font-weight:bold">return false</span>;<br>          =
      }<br>                <span style=3D"color:rgb(0,0,128);font-weight:bo=
ld">if </span>(exception <span style=3D"color:rgb(0,0,128);font-weight:bold=
">instanceof </span>NoHttpResponseException) {<br>                    <span=
 style=3D"color:rgb(128,128,128);font-style:italic">// Retry if the server =
dropped connection on us<br></span><span style=3D"color:rgb(128,128,128);fo=
nt-style:italic">                    </span><span style=3D"color:rgb(0,0,12=
8);font-weight:bold">return true</span>;<br>                }<br>          =
      <span style=3D"color:rgb(0,0,128);font-weight:bold">if </span>(except=
ion <span style=3D"color:rgb(0,0,128);font-weight:bold">instanceof </span>S=
SLHandshakeException) {<br>                    <span style=3D"color:rgb(128=
,128,128);font-style:italic">// Do not retry on SSL handshake exception<br>=
</span><span style=3D"color:rgb(128,128,128);font-style:italic">           =
         </span><span style=3D"color:rgb(0,0,128);font-weight:bold">return =
false</span>;<br>                }<br>                HttpRequest request =
=3D (HttpRequest) context.getAttribute(ExecutionContext.<span style=3D"colo=
r:rgb(102,14,122);font-weight:bold;font-style:italic">HTTP_REQUEST</span>);=
<br>                <span style=3D"color:rgb(0,0,128);font-weight:bold">boo=
lean </span>idempotent =3D !(request <span style=3D"color:rgb(0,0,128);font=
-weight:bold">instanceof </span>HttpEntityEnclosingRequest);<br>           =
     <span style=3D"color:rgb(0,0,128);font-weight:bold">if </span>(idempot=
ent) {<br>                    <span style=3D"color:rgb(128,128,128);font-st=
yle:italic">// Retry if the request is considered idempotent<br></span><spa=
n style=3D"color:rgb(128,128,128);font-style:italic">                    </=
span><span style=3D"color:rgb(0,0,128);font-weight:bold">return true</span>=
;<br>                }<br>                <span style=3D"color:rgb(0,0,128)=
;font-weight:bold">return false</span>;<br>            }<br>        };<br> =
       client.setHttpRequestRetryHandler(retryHandler);<br>        client.s=
etRedirectStrategy(<span style=3D"color:rgb(0,0,128);font-weight:bold">new =
</span>LaxRedirectStrategy());<br>        <span style=3D"color:rgb(0,0,128)=
;font-weight:bold">return new </span>DecompressingHttpClient(client);<br>  =
  }<br><br>    <span style=3D"color:rgb(0,0,128);font-weight:bold">public s=
tatic </span>HttpClient buildHttpClient(<span style=3D"color:rgb(0,0,128);f=
ont-weight:bold">boolean </span>trustAll) {<br>        <span style=3D"color=
:rgb(0,0,128);font-weight:bold">return </span><span style=3D"font-style:ita=
lic">buildHttpClient</span>(<span style=3D"color:rgb(0,0,128);font-weight:b=
old">null</span>, <span style=3D"color:rgb(0,0,128);font-weight:bold">true<=
/span>);<br>    }<br><br>    <span style=3D"color:rgb(0,0,128);font-weight:=
bold">public static </span>HttpClient buildHttpClient() {<br>        <span =
style=3D"color:rgb(0,0,128);font-weight:bold">return </span><span style=3D"=
font-style:italic">buildHttpClient</span>(<span style=3D"color:rgb(0,0,128)=
;font-weight:bold">null</span>, <span style=3D"color:rgb(0,0,128);font-weig=
ht:bold">false</span>);<br>    }<br><br>    <span style=3D"color:rgb(0,0,12=
8);font-weight:bold">public static void </span>clearCache() {<br>        <s=
pan style=3D"color:rgb(102,14,122);font-weight:bold;font-style:italic">http=
ClientCache</span>.clear();<br>    }<br><br>    <span style=3D"color:rgb(0,=
0,128);font-weight:bold">public static void </span>clearCacheEntry(String n=
ame) {<br>        <span style=3D"color:rgb(0,0,128);font-weight:bold">if </=
span>(HttpClientFactory.<span style=3D"color:rgb(102,14,122);font-style:ita=
lic">httpClientNameDecorator </span>!=3D <span style=3D"color:rgb(0,0,128);=
font-weight:bold">null</span>) {<br>            name =3D HttpClientFactory.=
<span style=3D"color:rgb(102,14,122);font-style:italic">httpClientNameDecor=
ator</span>.decorate(name);<br>        }<br>        <span style=3D"color:rg=
b(102,14,122);font-weight:bold;font-style:italic">httpClientCache</span>.re=
move(name);<br>    }<br><br>}<br></pre></div><div class=3D"gmail_extra"><br=
><div class=3D"gmail_quote">On Fri, Feb 17, 2017 at 5:41 PM, Digvijay Sharm=
a <span dir=3D"ltr">&lt;<a href=3D"mailto:digvijay@unicommerce.com" target=
=3D"_blank">digvijay@unicommerce.com</a>&gt;</span> wrote:<br><blockquote c=
lass=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;=
padding-left:1ex"><div dir=3D"ltr"><pre style=3D"color:rgb(0,0,0);font-fami=
ly:menlo;font-size:9pt"><br>    <span style=3D"color:rgb(0,0,128);font-weig=
ht:bold">public static void </span>main(String[] args) <span style=3D"color=
:rgb(0,0,128);font-weight:bold">throws </span>HttpTransportException, IOExc=
eption, InterruptedException {<br><span style=3D"color:rgb(128,128,128);fon=
t-style:italic">//        System.out.println(new BigDecimal(&quot;0.00&quot=
;));<br></span><span style=3D"color:rgb(128,128,128);font-style:italic"><br=
></span><span style=3D"color:rgb(128,128,128);font-style:italic">//        =
Process p =3D Runtime.getRuntime().exec(&quot;/<wbr>bin/bash -c wget --quie=
t   --output-document   - &#39;<a href=3D"https://www.singlekart.com/wp-jso=
n/wc/v1/products?consumer_key=3Dck_ac07ede27ebf2884d9a06dada0fb1eb3a6f19810=
&amp;consumer_secret=3Dcc9ec0eeb500af6b34bcec948ac6ee88396daf4cc&amp;per_pa=
ge=3D1&amp;page=3D1" target=3D"_blank">https://www.singlekart.com/<wbr>wp-j=
son/wc/v1/products?<wbr>consumer_key=3Dck_<wbr>ac07ede27ebf2884d9a06dada0fb=
1e<wbr>b3a6f19810&amp;consumer_secret=3D<wbr>cc9ec0eeb500af6b34bcec948ac6ee=
<wbr>88396daf4cc&amp;per_page=3D1&amp;page=3D1</a>&#39;<wbr>&quot;);<br></s=
pan><span style=3D"color:rgb(128,128,128);font-style:italic">//        p.wa=
itFor();<br></span><span style=3D"color:rgb(128,128,128);font-style:italic"=
>////        System.out.println(p.<wbr>getOutputStream());<br></span><span =
style=3D"color:rgb(128,128,128);font-style:italic">//        String s =3D n=
ull;<br></span><span style=3D"color:rgb(128,128,128);font-style:italic">// =
       try {<br></span><span style=3D"color:rgb(128,128,128);font-style:ita=
lic">//            BufferedReader br =3D new BufferedReader(<br></span><spa=
n style=3D"color:rgb(128,128,128);font-style:italic">//                    =
new InputStreamReader(p.<wbr>getInputStream()));<br></span><span style=3D"c=
olor:rgb(128,128,128);font-style:italic">//            while ((s =3D br.rea=
dLine()) !=3D null) {<br></span><span style=3D"color:rgb(128,128,128);font-=
style:italic">//                System.out.println(s);<br></span><span styl=
e=3D"color:rgb(128,128,128);font-style:italic">//            }<br></span><s=
pan style=3D"color:rgb(128,128,128);font-style:italic">//        } catch (I=
OException ioe) {<br></span><span style=3D"color:rgb(128,128,128);font-styl=
e:italic">//            ioe.printStackTrace();<br></span><span style=3D"col=
or:rgb(128,128,128);font-style:italic">//        }<br></span><span style=3D=
"color:rgb(128,128,128);font-style:italic">//        System.out.println(new=
 HttpSender(true).executeGet(&quot;<a href=3D"https://www.singlekart.com/wp=
-json/wc/v1/products?consumer_key=3Dck_ac07ede27ebf2884d9a06dada0fb1eb3a6f1=
9810&amp;consumer_secret=3Dcs_c9ec0eeb500af6b34bcec948ac6ee88396daf4cc&amp;=
per_page=3D1&amp;page=3D1" target=3D"_blank">h<wbr>ttps://www.singlekart.co=
m/wp-<wbr>json/wc/v1/products?consumer_<wbr>key=3Dck_<wbr>ac07ede27ebf2884d=
9a06dada0fb1e<wbr>b3a6f19810&amp;consumer_secret=3Dcs_<wbr>c9ec0eeb500af6b3=
4bcec948ac6ee8<wbr>8396daf4cc&amp;per_page=3D1&amp;page=3D1</a>&quot;,<wbr>=
null));<br></span><span style=3D"color:rgb(128,128,128);font-style:italic">=
        </span>System.<span style=3D"color:rgb(102,14,122);font-weight:bold=
;font-style:italic">out</span>.println(<span style=3D"color:rgb(0,0,128);fo=
nt-weight:bold">new </span>HttpSender(<span style=3D"color:rgb(0,0,128);fon=
t-weight:bold">true</span>).executeGet(<span style=3D"color:rgb(0,128,0);fo=
nt-weight:bold">&quot;<a href=3D"http://www.singlekart.com" target=3D"_blan=
k">h<wbr>ttp://www.singlekart.com</a>&quot;</span>,<span style=3D"color:rgb=
(0,0,128);font-weight:bold">null</span><wbr>));<br><br><br><span style=3D"c=
olor:rgb(128,128,128);font-style:italic">//        System.out.println(<wbr>=
dateToString(addToDate(<wbr>getCurrentDate(), Calendar.DATE, -30),&quot;yyy=
y-MM-ddTmm:HH:ssZ&quot;));<br></span><span style=3D"color:rgb(128,128,128);=
font-style:italic">    </span>}</pre></div><div class=3D"HOEnZb"><div class=
=3D"h5"><div class=3D"gmail_extra"><br><div class=3D"gmail_quote">On Fri, F=
eb 17, 2017 at 5:39 PM, Digvijay Sharma <span dir=3D"ltr">&lt;<a href=3D"ma=
ilto:digvijay@unicommerce.com" target=3D"_blank">digvijay@unicommerce.com</=
a>&gt;</span> wrote:<br><blockquote class=3D"gmail_quote" style=3D"margin:0=
 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div dir=3D"ltr">







<p class=3D"m_-5391729674530597366m_-9200278520830816835gmail-p1"><span cla=
ss=3D"m_-5391729674530597366m_-9200278520830816835gmail-s1">sudo keytool -i=
mport -alias alias -keystore=C2=A0 /Library/Java/JavaVirtualMachi<wbr>nes/j=
dk1.8.0_112.jdk/Contents/<wbr>Home/jre/lib/security/cacerts -file ~/Downloa=
ds/u1.cer</span></p><p class=3D"m_-5391729674530597366m_-920027852083081683=
5gmail-p1"><span class=3D"m_-5391729674530597366m_-9200278520830816835gmail=
-s1"><br></span></p><p class=3D"m_-5391729674530597366m_-920027852083081683=
5gmail-p1"><span class=3D"m_-5391729674530597366m_-9200278520830816835gmail=
-s1"><br></span></p></div>
</blockquote></div><br></div>
</div></div></blockquote></div><br></div>

--001a11c11d06fed2530548b8e287--